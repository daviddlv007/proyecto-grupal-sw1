===============================================================================
                        API PRÁCTICA ORAL - RESUMEN TÉCNICO
===============================================================================

🌐 URL BASE: https://softwaredlv.duckdns.org
📚 DOCUMENTACIÓN: https://softwaredlv.duckdns.org/docs
🩺 HEALTH CHECK: https://softwaredlv.duckdns.org/health

===============================================================================
                            ESTADO DE ENDPOINTS
===============================================================================

✅ ENDPOINTS FUNCIONANDO AL 100% (REALES)
==========================================

🔐 AUTENTICACIÓN
----------------
POST /auth/registrar
  - Registro de usuarios con validación
  - Hash SHA256 de contraseñas
  - Generación JWT real
  - Ejemplo: {correo: "test@example.com", contrasena: "password123"}
  - Respuesta: {id: 1, correo: "test@example.com", token: "eyJ..."}

POST /auth/login  
  - Login con credenciales reales
  - Verificación de hash
  - JWT válido por 24 horas
  - Ejemplo: {correo: "test@example.com", contrasena: "password123"}
  - Respuesta: {token: "eyJ..."}

GET /auth/yo
  - Información del usuario autenticado
  - Validación JWT real
  - Respuesta: {id: 1, correo: "test@example.com"}

🎮 GESTIÓN DE SESIONES
-----------------------
POST /practica/iniciar
  - Genera UUID real para sesión
  - Estado "grabando" funcional
  - Almacena sesión en memoria
  - Respuesta: {idSesion: "abc12345", estado: "grabando"}

===============================================================================

🎭 ENDPOINTS CON DATOS MOCK (SIMULADOS)
========================================

📊 ANÁLISIS DE PRÁCTICAS
-------------------------
POST /practica/finalizar
  ❌ DATOS MOCK:
    - Métricas hardcodeadas (muletillas: 5, fluidez: "alta")
    - Transcripción fija: "Hola a todos, hoy voy a hablar sobre..."
    - Puntuación siempre "amarillo"
  📝 PARA IMPLEMENTAR: Integrar APIs de transcripción (Whisper) y análisis de video

GET /practica/{id}/analisis
  ❌ DATOS MOCK:
    - Resumen fijo: "El discurso fue comprensible..."
    - Métricas estáticas
  📝 PARA IMPLEMENTAR: Algoritmos de análisis de comunicación oral

GET /practica/historial
  ⚡ HÍBRIDO: Estructura real, datos vienen de mocks anteriores

GET /practica/{id}
  ⚡ HÍBRIDO: Búsqueda real por ID, datos son mocks

📈 PROGRESO Y PLANIFICACIÓN
----------------------------
GET /plan/actual
  ❌ DATOS MOCK:
    - Plan de estudios fijo (semana 1)
    - Tareas hardcodeadas: ["Haz 3 charlas de 2 minutos...", etc]
  📝 PARA IMPLEMENTAR: Generador dinámico de planes personalizados

GET /progreso/resumen
  ❌ DATOS MOCK:
    - Tendencias fijas (muletillas: -20, fluidez: +15)
    - Puntuación promedio siempre "verde"
  📝 PARA IMPLEMENTAR: Cálculo real basado en historial de usuario

🏆 GAMIFICACIÓN
----------------
GET /recompensas/insignias
  ❌ DATOS MOCK:
    - Solo insignia "Primera práctica" hardcodeada
  📝 PARA IMPLEMENTAR: Sistema de logros basado en métricas reales

GET /recompensas/racha
  ❌ DATOS MOCK:
    - Racha fija: 5 días
  📝 PARA IMPLEMENTAR: Cálculo real de días consecutivos

===============================================================================
                            ARQUITECTURA ACTUAL
===============================================================================

🐳 DEPLOYMENT
--------------
- Docker + Docker Compose
- Caddy como reverse proxy
- SSL automático con Let's Encrypt
- Dominio: softwaredlv.duckdns.org

🔒 SEGURIDAD
-------------
- HTTPS/TLS 1.3
- Headers de seguridad (HSTS, XSS Protection, etc.)
- JWT para autenticación
- CORS configurado

💾 ALMACENAMIENTO
-----------------
- Base de datos EN MEMORIA (diccionarios Python)
- Datos se pierden al reiniciar contenedor
- ⚠️ PARA PRODUCCIÓN: Migrar a PostgreSQL/MongoDB



===============================================================================
                           CÓMO USAR LA API
===============================================================================

📖 DOCUMENTACIÓN INTERACTIVA
-----------------------------
Visitar: https://softwaredlv.duckdns.org/docs
- Probar todos los endpoints en vivo
- Ver esquemas de request/response
- Generar tokens JWT para testing

🧪 TESTING BÁSICO
------------------
1. Registrar usuario en /auth/registrar
2. Hacer login en /auth/login (obtener token)
3. Usar token en header: Authorization: Bearer <token>
4. Probar endpoints protegidos


===============================================================================
                                CONTACTO
===============================================================================

🔗 Repositorio: https://github.com/daviddlv007/proyecto-grupal-sw1
📧 Para dudas técnicas: Consultar documentación en /docs
🐛 Reportar bugs: Issues en GitHub

===============================================================================
                            ÚLTIMAS ACTUALIZACIONES
===============================================================================

✅ 20/10/2025: API desplegada con HTTPS en softwaredlv.duckdns.org
✅ 20/10/2025: 12 endpoints implementados (4 reales, 8 mock)
✅ 20/10/2025: Documentación automática disponible
✅ 20/10/2025: Arquitectura con entidades de dominio tipadas

===============================================================================