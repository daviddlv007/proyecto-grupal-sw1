name: 🚀 Auto Deploy API to Production

on:
  push:
    branches: [ main ]
    paths:
      - 'backend/**'
      - 'docker-compose.caddy.yml'
      - 'infra/caddy/**'
      - '.github/workflows/**'
  
  # Permitir ejecución manual
  workflow_dispatch:

jobs:
  deploy:
    name: 🌐 Deploy to Server
    runs-on: ubuntu-latest
    
    steps:
    - name: 📂 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: 📝 Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: 🚀 Deploy to server
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          set -e
          echo "🔄 Starting deployment..."
          
          # Ir al directorio del proyecto
          cd /root/proyecto-grupal-sw1
          
          # Actualizar código
          echo "📥 Pulling latest code..."
          git pull origin main
          
          # Detener contenedores actuales
          echo "⏹️ Stopping current containers..."
          docker compose -f docker-compose.caddy.yml down || true
          
          # Limpiar imágenes antiguas (opcional)
          echo "🧹 Cleaning up old images..."
          docker system prune -f || true
          
          # Configurar variables de entorno
          export DOMAIN=softwaredlv.duckdns.org
          
          # Construir y ejecutar
          echo "🏗️ Building and starting containers..."
          docker compose -f docker-compose.caddy.yml up -d --build
          
          # Verificar que esté funcionando
          echo "🔍 Checking deployment..."
          sleep 10
          
          # Verificar que los contenedores estén corriendo
          if docker compose -f docker-compose.caddy.yml ps | grep -q "Up"; then
            echo "✅ Deployment successful!"
            
            # Verificar que la API responda
            if curl -f -s https://softwaredlv.duckdns.org/health > /dev/null; then
              echo "✅ API is responding correctly!"
            else
              echo "⚠️ API might not be responding correctly"
              exit 1
            fi
          else
            echo "❌ Deployment failed - containers not running"
            docker compose -f docker-compose.caddy.yml logs
            exit 1
          fi
          
          echo "🎉 Deployment completed successfully!"
        EOF
        
    - name: 📊 Deployment Summary
      run: |
        echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Server**: ${{ secrets.SERVER_HOST }}" >> $GITHUB_STEP_SUMMARY
        echo "- **API URL**: https://softwaredlv.duckdns.org" >> $GITHUB_STEP_SUMMARY
        echo "- **Documentation**: https://softwaredlv.duckdns.org/docs" >> $GITHUB_STEP_SUMMARY
        echo "- **Health Check**: https://softwaredlv.duckdns.org/health" >> $GITHUB_STEP_SUMMARY
        echo "- **Deployed at**: $(date)" >> $GITHUB_STEP_SUMMARY